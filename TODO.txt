TODO.txt

cd ~/Projects/
git clone git@github.com:mohangk/uadc_rego.git wudcberlin_fastrego
cd wudcberlin_fastrego/
vim config/database.yml 
git commit -am 'generic database config'
heroku login
heroku create wudcberlin_fastrego --stack cedar
git push heroku master

heroku addons:add pgbackups:auto-month 
heroku addons:add mailgun:starter
#cant do db:migrate due to issue with the models being called at initialization ?
rvm list
rvm use ruby-1.9.2-p290
heroku db:push postgres://127.0.0.1/uadc_rego_development?encoding=utf8
#heroku console
  AdminUser.update_attributes(:email => 'test@gmail.com', :password => 'password', :password_confirmation => 'password')
  Payment.delete_all
  Institution.destroy_all
#setup mailgun
#setup S3

- deploy site
 - setup heroku 
 - push to heroku
 - setup active admin user 
 - add mailgun addon
 - add S3 bucket

- setup configuration env
  * mailgun 
  * S3 
  * production.rb
    - hostnames need to be replaces with env variable 
- push configurations to site
- add db backup support
- test emailing, upload of images
- setup configuration options

-load institutions in


- add additional fields for profile

# Generalise following

- change database.yml to be more generic (like bipeds instance)
  - to do this must look into renaming uadc2012 instance

./config/initializers/session_store.rb:UadcRego:
./config/application.rb:module UadcRego
./config/environment.rb:UadcRego::Application.initialize!
./config/environments/development.rb:UadcRego::Application.configure do
./config/environments/production.rb:UadcRego::Application.configure do
./config/environments/staging.rb:UadcRego::Application.configure do
./config/environments/test.rb:UadcRego::Application.configure do
./config/initializers/session_store.rb:# UadcRego::Application.config.session_store :active_record_store
./config/routes.rb:UadcRego::Application.routes.draw do
./config.ru:run UadcRego::Application
./config/initializers/secret_token.rb:UadcRego::Application.config.secret_token = ''
./config/initializers/session_store.rb:UadcRego::Application.config.session_store :cookie_store, key: '_uadc_rego_session'

#User
- implment controller specs for delete payment, add debater/observer/adjudicator
- complete view specs for payment_table

#Fix assets precompile issue
  Make payments a nested controller of users and clean up the routes\

#How do we handle cases where the user has already keyed in participants but the amount of participants are changed in the backend?
  - implement validation
